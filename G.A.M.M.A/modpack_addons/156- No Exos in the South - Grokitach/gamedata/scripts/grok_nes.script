ini_capture	 = ini_file("creatures\\grok_nes_models_capture.ltx")
ini_bones		 = ini_file("creatures\\grok_nes_bone_profiles.ltx")
ini_damage		= ini_file("creatures\\damages.ltx")

-- maps with 1 means, no exos in these maps

local whitelisted_maps = {
    ["k00_marsh"] = 1,
    ["l01_escape"] = 1,
    ["l05_bar"] = 0,
    ["l02_garbage"] = 1,
    ["k01_darkscape"] = 1,
    ["l04_darkvalley"] = 1,
    ["k02_trucks_cemetery"] = 0,
    ["l09_deadcity"] = 0,
    ["l03_agroprom"] = 0,
    ["l06_rostok"] = 1,
    ["l07_military"] = 0,
    ["l08_yantar"] = 0,
    ["jupiter"] = 0,
    ["l03u_agr_underground"] = 0,
    ["l10_limansk"] = 0,
    ["l08u_brainlab"] = 0,
    ["l10_red_forest"] = 0,
    ["labx8"] = 0,
    ["l12_stancia"] = 0,
    ["zaton"] = 0,
    ["l12_stancia_2"] = 0,
    ["l11_hospital"] = 0,
    ["jupiter_underground"] = 0,
    ["l10u_bunker"] = 0,
    ["l10_radar"] = 0,
    ["l04u_labx18"] = 0,
    ["l11_pripyat"] = 0,
    ["l12u_sarcofag"] = 0,
    ["l12u_control_monolith"] = 0,
    ["l13_generators"] = 0,
    ["l13u_warlab"] = 0,
    ["pripyat"] = 0,
    ["y04_pole"] = 0,
}

trigger = 0
delay = 1130
function npc_on_update(npc)
	tg = time_global()
	
	if trigger == 0 then
       	grok_delay = tg + delay
		trigger = 1
	end
	
	if (trigger == 1 and tg > grok_delay) then
		trigger = 0
		local sim = alife()
		local gg = game_graph()
		local actor_level = sim:level_name(gg:vertex(sim:actor().m_game_vertex_id):level_id())
		local whitelist = whitelisted_maps[actor_level]

		if whitelist == 1 then
			if npc then
				if IsStalker(npc) and (not get_object_story_id(npc:id())) then
					local npc_viz = npc:get_visual_name()

					if npc:has_info("npcx_is_companion") then return end
							
					if not ini_capture:section_exist(npc_viz) then return end

					local npc_armor_path = ini_capture:r_string(npc_viz,"model_path")	
					local ini_npc_armor = ini_file(npc_armor_path)
					local npc_armor_section = ini_npc_armor:r_string('bone_protection','bones_protection_sect')
					local npc_bone_profile_name = ini_bones:r_string(npc_armor_section,"bone_profile")
					printf(npc_bone_profile_name)
						
					if npc_bone_profile_name == "body_damage_035" or npc_bone_profile_name == "body_damage_040" or
					npc_bone_profile_name == "body_damage_043" or npc_bone_profile_name == "body_damage_045" or
					npc_bone_profile_name == "body_damage_047" or npc_bone_profile_name == "body_damage_050" then
						alife():release(alife():object(npc:id()))
						printf("// GNES: An exoskeleton got deleted: %s", npc:section())
					end
				end
			end
		end 
	else return end
end

function on_game_start()
	RegisterScriptCallback("npc_on_update",npc_on_update)
end