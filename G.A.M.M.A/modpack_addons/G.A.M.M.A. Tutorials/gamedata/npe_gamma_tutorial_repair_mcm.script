-- NPE Module template

-- PREPARATION

-- FIRST STEP
--      you need to define the name of this module
--      use as module name the name of your mod main script preceded by npe_
--      for example (mymod.script --> npe_mymod_mcm.script). Therefore the modelname chosen in this example is "npe_mymod"
--      or something that you know will be unique in the hypotetical modlist's scripts' namespace, where this npe module will be added
-- SECOND STEP
--      replace in all filenames included in this template module, this script included, the string "gamma_tutorial_repair" with your chosen module name
--      replace in this script all the instances of gamma_tutorial_repair and setname as required
function broken_gun_checker(item)
	found = false
	if item and IsWeapon(item) and not IsMelee(item) then
		local parts_condition = item_parts.get_parts_con(item)
		for _, value in pairs(parts_condition) do
			if value < 60 then
				found = true
			end
		end
	end
end

function get_found_status()
	if found then
		return true
	end
end

local EVENT = {
    BROKEN_GUN_FOUND = { 
        name = "Gun Repair System", -- this will be presented in the tutorial window as breadcrumb in the top left. It represent the context of the event  and it's not localized (use english preferably)
        handler = { 
            name = "on_actor_finding_broken_gun",
            functor = {"npe_gamma_tutorial_repair_mcm", "get_found_status"}
        } 
    },
}

local deck_npe_gamma_tutorial_repair = { 
    title = "Gun Repair Tutorial",
    module= "gamma_tutorial_repair",
    id="gamma_tutorial_repair",
    sets = {
        sets = {
            {
                id = "gun",
                title = "ui_mcm_npe_module_gamma_tutorial_repair_gun_to_ruck",
                cards = {
                    [1] = {
                        title = "ui_gamma_tutorial_repair_gun_card_01_title",
                        description = "ui_gamma_tutorial_repair_gun_card_01_description",
                        image = "ui_gamma_tutorial_repair_gun_card_01", -- it must reference a texture id in the file "ui/texture_descr/gamma_tutorial_repair.xml"
                    },
                    [2] = {
                        title = "ui_gamma_tutorial_repair_gun_card_02_title",
                        description = "ui_gamma_tutorial_repair_gun_card_02_description",
                        image = "ui_gamma_tutorial_repair_gun_card_02",
                    },
                    [3] = {
                        title = "ui_gamma_tutorial_repair_gun_card_03_title",
                        description = "ui_gamma_tutorial_repair_gun_card_03_description",
                        image = "ui_gamma_tutorial_repair_gun_card_03",
                    },
                    [4] = {
                        title = "ui_gamma_tutorial_repair_gun_card_04_title",
                        description = "ui_gamma_tutorial_repair_gun_card_04_description",
                        image = "ui_gamma_tutorial_repair_gun_card_04",
                    },    
                    [5] = {
                        title = "ui_gamma_tutorial_repair_gun_card_05_title",
                        description = "ui_gamma_tutorial_repair_gun_card_05_description",
                        image = "ui_gamma_tutorial_repair_gun_card_05",
                    },    					
                },
                -- [MANDATORY] Define the context of when the set shall become active and shown
                --      context represet the way this set is triggered and shown to the player
                --      context can have the following keys:
                --      event: [MANDATORY] the event that triggers this set
                --      delay: [OPTIONAL] the delay in seconds after the event is triggered before the set is shown
                --      pause_game: [OPTIONAL] if true the game is paused when the set is shown
                --      override: [OPTIONAL] rule to override another npe module set on similar context (e.g. if you want to override the encumbrance set of another npe module)

                context = {
                    event = EVENT.BROKEN_GUN_FOUND,
					pause_game = true,
                },
            },
        },  
    },
}


function on_mcm_load()
    -- [MANDATORY] The NPE module MCM menu meeds to be populated with the sets' ids defined above
	op =  { id= "gamma_tutorial_repair", sh=true, text="ui_mcm_npe_module_gamma_tutorial_repair", gr ={
				{id = "title",type= "slide",link= "ui_options_slider_player",text="ui_mcm_npe_module_gamma_tutorial_repair_title",size= {512,50},spacing= 20 },
                -- [MANDATORY] The sets' ids defined above need to be added here. 
                --      This allow the user to check sets that have been shown (selected) and evenually replay them (unselect in mcm) if needed
                {id = "setname", type = "check", val = 1, def=false},
                {id = "setname1", type = "check", val = 1, def=false},
			}
		}

	return op, "npe_module"  -- [IMPORTANT] do not change this line
end

-- [MANDATORY] At game start add your deck with the NPE Manager
--      you need to replace "deck_npe_gamma_tutorial_repair" with the name of your deck

function on_game_start()
    if npe then
        npe_manager.Printlog_npe("// [NPE] Adding deck " .. deck_npe_gamma_tutorial_repair.title .. " to NPE Manager.")
        npe_manager.Add_deck(deck_npe_gamma_tutorial_repair)
    end

	RegisterScriptCallback("actor_item_to_ruck",broken_gun_checker)
end
end